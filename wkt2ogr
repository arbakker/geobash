#!/usr/bin/env bash
PROGRAM_NAME=$(basename $0)
INPUT_FILE=${1:--}
INPUT_SRS=${2}
FORMAT=${3}
OUTPUT_FILE=${4}
LAYERNAME=${5}

function usage {
    echo "Convert WKT objects to fileformat supported by OGR/GDAL. Requires ogr2ogr and gdalsrsinfo binary to be available in PATH"
    echo ""
    echo "usage: $PROGRAM_NAME <wkt_file|-(wkt objects on stdin)> <input_srs> <output_format> <output_file> <layername>"
    echo "    - <wkt_file|-(wkt objects on stdin>: file containing wkt geometries or pass wkt objects on stdin"
    echo "    - <input_srs>: epsg code of input data"
    echo "    - <output_format>: ogr2ogr output format"
    echo "    - <output_file>: destination file"
    echo "    - <layername>: layername in output file"
    exit 1
}

if [ "$#" -ne 5 ]; then
    usage
fi

set -euo pipefail

VRT_STRING="<OGRVRTDataSource>
    <OGRVRTLayer name=\"wkt_convert\">
       <SrcDataSource>/tmp/wkt_convert.csv</SrcDataSource>
      <GeometryType>wkbPolygon</GeometryType>
 <LayerSRS>{{input_srs}}</LayerSRS>
 <GeometryField encoding=\"WKT\" field=\"wkt\"></GeometryField >
     </OGRVRTLayer>
</OGRVRTDataSource>"
CSV_FILE="/tmp/wkt_convert.csv"

function process_wkt_strings(){
    local wkt_strings format output_file layername input_srs
    wkt_strings="$1"
    input_srs="$2"
    format="$3"
    output_file="$4"
    layername="$5"
    echo "id,wkt" > $CSV_FILE
    i=0
    while IFS= read -r wkt_string; do
        echo "$i,\"$wkt_string\"" >> $CSV_FILE
        i=$((i+1))
    done <<< "$wkt_strings"
    SRS_WKT=$(gdalsrsinfo  "EPSG:$input_srs" -o WKT)
    SRS_WKT=${SRS_WKT/\"/\\\"}
    VRT_STRING=${VRT_STRING/\{\{input_srs\}\}/$SRS_WKT}
    echo "$VRT_STRING" > /tmp/ogr.vrt
    rm -f "$output_file"
    ogr2ogr -f "$format" "/tmp/$(basename $output_file)" /tmp/ogr.vrt -nln "$layername" wkt_convert
    ogr2ogr -f "$format" "$output_file" "/tmp/$(basename $output_file)" -sql "select geom from $layername" -nln "$layername"
}

if [[ $INPUT_FILE == "-" ]];then
# INPUT_FILE passed on stdin
    if [ -t 0 ]; then
    # if do not allow interactive tty
        usage
        exit 1
    fi
    WKT_STRINGS=$(</dev/stdin)
else
    WKT_STRINGS=$(<$INPUT_FILE)
fi
process_wkt_strings "$WKT_STRINGS" "$INPUT_SRS" "$FORMAT" "$OUTPUT_FILE" "$LAYERNAME"
