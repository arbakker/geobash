#!/usr/bin/env bash
PROGRAM_NAME=$(basename $0)
EPSG_IN=$1
EPSG_OUT=$2
BBOX="${@:3}"
BBOX="${BBOX:--}"
BBOX="${BBOX//[[:space:]]/}" # stripping spaces from BBOX argument

PROJ_LIB=/usr/share/proj
PROJ_DEBUG=0

function usage {
    echo "Reproject bounding box string using cs2cs from the Proj library."
    echo ""
    echo "usage: $PROGRAM_NAME <input_epsg_code> <output_epsg_code> <bbox|-(bbox on stdin)> "
    echo "    - <bbox>: \$minx,\$miny,\$maxx,\$maxy"
    echo "    - <epsg_code>: [0-9]+"
    exit 1
}

if [[ "$#" -lt 3 ]]; then
    usage
fi

set -euo pipefail

function process_bbox(){
    local bbox
    bbox="$1"
    
    minx=$(echo "$bbox" | awk -F, '{print $1}')
    min_y=$(echo "$bbox" | awk -F, '{print $2}')
    max_x=$(echo "$bbox" | awk -F, '{print $3}')
    max_y=$(echo "$bbox" | awk -F, '{print $4}')
    min_new=$(echo $minx $min_y | cs2cs -f "%.6f" +init=epsg:$EPSG_IN +to +init=epsg:$EPSG_OUT)
    max_new=$(echo $max_x $max_y | cs2cs -f "%.6f" +init=epsg:$EPSG_IN +to +init=epsg:$EPSG_OUT)
    min_x_new=$(echo $min_new | awk -F' ' '{print $1}')
    min_y_new=$(echo $min_new | awk -F' ' '{print $2}')
    max_x_new=$(echo $max_new | awk -F' ' '{print $1}')
    max_y_new=$(echo $max_new | awk -F' ' '{print $2}')
    echo "${min_x_new},${min_y_new},${max_x_new},${max_y_new}"
}

if [[ $BBOX == "-" ]];then
# BBOX passed on stdin
    if [ -t 0 ]; then
    # if do not allow interactive tty
        usage
    fi
    while read line
    do
        process_bbox "$line"
    done < "/dev/stdin"
else
# BBOX passed as argument 
    process_bbox "$BBOX"
fi
